<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ndtp.persistence.GeoPolicyMapper">

	<!-- 운영 정책 정보 -->
	<select id="getGeoPolicy" resultType="geoPolicy">
		/* getGeoPolicy */
		SELECT * FROM geopolicy ORDER BY geopolicy_id DESC LIMIT 1
	</select>

	<!-- 공간 정보 기본 수정 -->	
	<update id="updateGeoPolicy" parameterType="geoPolicy">
		/* updateGeoPolicy */
		UPDATE geopolicy
		SET geo_view_library = #{geoVieLibrary},
			geo_cesium_ion_token = #{geoCesiumIonToken},
			geo_data_path = #{geo_data_path},
			<if test="geoDataDefaultProjects == null or geoDataDefaultProjects == ''">
			geo_data_default_projects = null,
			</if>
			<if test="geoDataDefaultProjects != null and geoDataDefaultProjects != ''">
			geo_data_default_projects = STRING_TO_ARRAY(#{geoDataDefaultProjects}, ','),
			</if>
			geo_data_change_request_decision = #{geoDataChangeRequestDecision},
			geo_cull_face_enable = #{geoCullFaceEnable},
			geo_time_line_enable = #{geoTimeLineEnable},
			geo_init_camera_enable = #{geoInitCameraEnable},
			geo_init_latitude = #{geoInitLatitude},
			geo_init_longitude = #{geoInitLongitude},
			geo_init_height = #{geoInitHeight},
			geo_init_duration = #{geoInitDuration},
			geo_init_default_terrain = #{geoInitDefaultTerrain},
			geo_init_default_fov = #{geoInitDefaultFov},
			geo_lod0 = #{geoLod0},
			geo_lod1 = #{geoLod1},
			geo_lod2 = #{geoLod2},
			geo_lod3 = #{geoLod3},
			geo_lod4 = #{geoLod4},
			geo_lod5 = #{geoLod5},
			geo_ambient_reflection_coef = #{geoAmbientReflectionCoef},
			geo_diffuse_reflection_coef = #{geoDiffuseReflectionCoef},
			geo_specular_reflection_coef = #{geoSpecularReflectionCoef},
			geo_specular_color = #{geoSpecularColor},
			geo_ambient_color = #{geoAmbientColor},
			geo_ssao_radius = #{geoSsaoRadius}
		WHERE geopolicy_id = #{geopolicyId}
	</update>
	
	<!-- Geo Server 수정 -->	
	<update id="updateGeoPolicyGeoServer" parameterType="geoPolicy">
		/* updateGeoPolicyGeoServer */
		UPDATE geopolicy
		SET geo_server_enable = #{geoServerEnable},
			geo_server_url = #{geoServerUrl},
			geo_server_layers = #{geoserverLayers},
			geo_server_parameters_service = #{geoServerParametersService},
			geo_server_parameters_version = #{geoServerParametersversion},
			geo_server_parameters_request = #{geoServerParametersRequest},
			geo_server_parameters_transparent = #{geoServerParametersTransparent},
			geo_server_parameters_format = #{geoServerParametersFormat},
			geo_server_add_url = #{geoServerAddUrl},
			geo_server_add_layers = #{geoServerAddLayers},
			geo_server_add_parameters_service = #{geoServerAddParametersService},
			geo_server_add_parameters_version = #{geoServerAddParametersVersion},
			geo_server_add_parameters_request = #{geoServerAddParametersRequest},
			geo_server_add_parameters_transparent = #{geoServerAddParametersTransparent},
			geo_server_add_parameters_format = #{geoServerAddParametersFormat}
		WHERE geopolicy_id = #{geopolicyId}
	</update>
	
	<!-- CallBack Function 수정 -->	
	<update id="updateGeoPolicyGeoCallBack" parameterType="geoPolicy">
		/* updateGeoPolicyGeoCallBack */
		UPDATE geopolicy
		SET geo_callback_enable = #{geoCallbackEnable},
			geo_callback_apiresult = #{geoCallbackApiresult},
			geo_callback_dataInfo = #{geoCallbackDataInfo},
			geo_callback_moveddata = #{geoCallbackMoveddata},
			geo_callback_selectedobject = #{geoCallbackSelectedobject},
			geo_callback_insertissue = #{geoCallbackInsertissue},
			geo_callback_listissue = #{geoCallback_listissue},
			geo_callback_clickposition = #{geoCallbackClickposition}
		WHERE geopolicy_id = #{geopolicyId}
	</update>
	
</mapper>