<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ndtp.persistence.CivilVoiceMapper">

	<!-- 시민 참여 목록 조회 -->
	<select id="getListCivilVoice" parameterType="civilVoice" resultType="civilVoice">
		/* getListCivilVoice */
		WITH civil_voice AS (
	        SELECT
				civil_voice_id,
				user_id,
				title,
				content as contents,
				location,
				heit as altitude,
				use_yn as available,
				user_ip as client_ip,
				view_count,
				year, month, day, year_week, week, hour, minute,
				update_dt as update_date,
				regist_dt as insert_date,
				sido_cd, sgg_cd, emd_cd
	        FROM tn_civil_voice
        )
        SELECT
			civil_voice.*,
			ST_X(location) AS longitude, ST_Y(location) AS latitude,
			CASE WHEN user_id = #{userId} THEN true ELSE false END as editable
        FROM civil_voice
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="title != null and title != '' ">
			AND ${title} = #{title}
			</if>
		</trim>
		OFFSET #{offset} LIMIT #{limit}
	</select>

	<!-- 시민 참여 전체 건수 조회 -->
	<select id="getCivilVoiceTotalCount" parameterType="string" resultType="long">
		/* getCivilVoiceTotalCount */
		WITH civil_voice AS (
	        SELECT
				civil_voice_id,
				user_id,
				title,
				content as contents,
				location,
				heit as altitude,
				use_yn as available,
				user_ip as client_ip,
				view_count,
				year, month, day, year_week, week, hour, minute,
				update_dt as update_date,
				regist_dt as insert_date,
				sido_cd, sgg_cd, emd_cd
	        FROM tn_civil_voice
        )
        SELECT COUNT(civil_voice_id)
        FROM civil_voice
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="title != null and title != '' ">
			AND ${title} = #{title}
			</if>
		</trim>
	</select>

	<!-- 시민 참여 한건에 대한 정보 조회 -->
	<select id="getCivilVocieById" parameterType="long" resultType="civilVoice">
		/* getCivilVocieById */
		SELECT * FROM tn_civil_voice WHERE civil_voice_id = #{civilVoiceId}
	</select>

	<!-- 등록 -->
	<insert id="insertCivilVoice" parameterType="civilVoice">
		/* insertCivilVoice */
		<selectKey keyProperty="civilVoiceId" resultType="long" order="BEFORE">
			SELECt NEXTVAL('civil_voice_seq')
		</selectKey>
		INSERT INTO tn_civil_voice(
			civil_voice_id, user_id, user_ip, title, content, location, heit, sido_cd, sgg_cd, emd_cd, regist_dt
		) VALUES (
			#{civilVoiceId}, #{userId}, #{userIp}, #{title}, #{content}, ST_GeomFromText(#{location}, 4326), #{heit}, #{sidoCd}, #{sggCd}, #{emdCd}, NOW()
		)
	</insert>

	<!-- 수정 -->
	<update id="updateCivilVoice" parameterType="civilVoice">
		/* updateCivilVoice */
		UPDATE tn_civil_voice SET
			title = #{title},
			content = #{content},
			location = ST_GeomFromText(#{location}, 4326),
			heit = #{heit},
			sido_cd = #{sidoCd},
			sgg_cd = #{sggCd},
			emd_cd = #{emdCd},
			update_dt = NOW()
		WHERE civil_voice_id = #{civilVoiceId}
	</update>

	<!-- 삭제 -->
	<delete id="deleteCivilVoice" parameterType="long">
		/* deleteCivilVoice */
		DELETE FROM tn_civil_voice WHERE civil_voice_id = #{civilVoiceId}
	</delete>

	<delete id="deleteAllCivilVoice">
		/* deleteAllCivilVoice */
		DELETE FROM tn_civil_voice
	</delete>
</mapper>