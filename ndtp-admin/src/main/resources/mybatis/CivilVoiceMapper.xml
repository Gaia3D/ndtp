<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ndtp.persistence.CivilVoiceMapper">

    <!-- CivilVoice 총 건수 -->
    <select id="getCivilVoiceTotalCount" parameterType="civilVoice" resultType="long">
        /* getCivilVoiceTotalCount */
        WITH civil_voice AS (
	        SELECT
				civil_voice_id,
				user_id,
				title,
				content as contents,
				location,
				heit as altitude,
				use_yn as available,
				user_ip as client_ip,
				view_count,
				year, month, day, year_week, week, hour, minute,
				update_dt as update_date,
				regist_dt as insert_date,
				sido_cd, sgg_cd, emd_cd
	        FROM tn_civil_voice
        )
        SELECT COUNT(civil_voice_id)
        FROM civil_voice
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			AND ${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			AND ${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			AND insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
    </select>

    <!-- CivilVoice 목록 -->
    <select id="getListCivilVoice" parameterType="civilVoice" resultType="civilVoice">
        /* getListCivilVoice */
        WITH civil_voice AS (
	        SELECT
				civil_voice_id,
				user_id,
				title,
				content as contents,
				location,
				heit as altitude,
				use_yn as available,
				user_ip as client_ip,
				view_count,
				year, month, day, year_week, week, hour, minute,
				update_dt as update_date,
				regist_dt as insert_date,
				sido_cd, sgg_cd, emd_cd
	        FROM tn_civil_voice
        )
        SELECT
			*
        FROM civil_voice
        <trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			AND ${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			AND ${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			AND insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
		<choose>
		<when test="orderWord != null and orderWord != '' and orderValue != null and orderValue != ''">
		ORDER BY ${orderWord} ${orderValue}
		</when>
		<otherwise>
		ORDER BY insert_date DESC, civil_voice_id DESC
		</otherwise>
		</choose>
		OFFSET #{offset} LIMIT #{limit}
    </select>

    <!-- 시민 참여 상세 조회 -->
    <select id="getCivilVoice" parameterType="civilVoice" resultType="civilVoice">
        /* getCivilVoice */
        WITH civil_voice AS (
	        SELECT
				civil_voice_id,
				user_id,
				title,
				content as contents,
				location,
				heit as altitude,
				use_yn as available,
				user_ip as client_ip,
				view_count,
				year, month, day, year_week, week, hour, minute,
				update_dt as update_date,
				regist_dt as insert_date,
				sido_cd, sgg_cd, emd_cd
	        FROM tn_civil_voice
        )
        SELECT *
        FROM civil_voice
        WHERE civil_voice_id = #{civilVoiceId}
    </select>

    <!-- 시민 참여 등록 -->
    <insert id="insertCivilVoice" parameterType="civilVoice">
        <selectKey keyProperty="civilVoiceId" resultType="int" order="BEFORE">
            SELECT NEXTVAL('civil_voice_seq')
        </selectKey>
        INSERT INTO tn_civil_voice (
			civil_voice_id,	user_id, title, content, location, heit,
			user_ip, view_count, use_yn, sido_cd, sgg_cd, emd_cd,
			year, month, day, year_week, week, hour, minute
        ) VALUES (
			#{civilVoiceId}, #{userId}, #{title}, #{contents}, #{location}, #{altitude},
			#{clientIp}, #{viewCount}, #{available}, #{sidoCd}, #{sggCd}, #{emdCd},
			#{year}, #{month}, #{day}, #{yearWeek}, #{week}, #{hour}, #{minute}
        )
    </insert>

    <!-- 시민 참여 수정 -->
    <update id="updateCivilVoice" parameterType="civilVoice">
        /* updateCivilVoice */
        UPDATE tn_civil_voice
        SET
			user_id = #{userId},
			title = #{title},
			content = #{contents},
			location = #{location},
			heit = #{altitude},
			use_yn = #{available},
			user_ip = #{userIp},
			view_count = #{viewCount},
			year = #{year},
			month = #{month},
			day = #{day},
			year_week = #{yearWeek},
			week = #{week},
			hour = #{hour},
			minute = #{minute},
			sido_cd = #{sidoCd},
			sgg_cd = #{sggCd},
			emd_cd = #{emdCd},
			update_dt = NOW()
        WHERE civil_voice_id = #{civilVoiceId}
    </update>

    <!-- 시민 참여 삭제 -->
    <delete id="deleteCivilVoice" parameterType="civilVoice">
        /* deleteCivilVoice */
        DELETE FROM tn_civil_voice WHERE civil_voice_id = #{civilVoiceId}
    </delete>

</mapper>