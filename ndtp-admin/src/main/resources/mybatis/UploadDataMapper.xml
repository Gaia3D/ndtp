<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ndtp.persistence.UploadDataMapper">

	<!-- 사용자가 업로드 완료한 파일 총 건수 -->
	<select id="getUploadDataTotalCount" parameterType="uploadData" resultType="long">
		/* getUploadDataTotalCount */
		SELECT COUNT(upload_data_id) 
		FROM upload_data
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="sharing != null and sharing != ''">
			sharing = #{sharing}
			</if>
			<if test="dataType != null and dataType != ''">
			data_type = #{dataType}
			</if>
			<if test="userId != null and userId != ''">
			user_id = #{userId}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
	</select>
	
	<!-- 사용자가 업로드 완료한 파일 목록 -->
	<select id="getListUploadData" parameterType="uploadData" resultType="uploadData">
		/* getListUploadData */
		SELECT A.*, B.data_group_name
		FROM upload_data A, data_group B
		WHERE A.data_group_id = B.data_group_id
		<if test="dataGroupName != null and dataGroupName != ''">
		B.data_group_name = #{dataGroupName}
		</if>
		<if test="sharing != null and sharing != ''">
		A.sharing = #{sharing}
		</if>
		<if test="dataType != null and dataType != ''">
		A.data_type = #{dataType}
		</if>
		<if test="userId != null and userId != ''">
		A.user_id = #{userId}
		</if>
		<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
		${searchWord} = #{searchValue}
		</if>
		<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
		${searchWord} LIKE '%' || #{searchValue} || '%'
		</if>
		<if test="startDate != null and startDate != ''">
		<![CDATA[
		A.insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
		]]>
		</if>
		<if test="endDate != null and endDate != ''">
		<![CDATA[
		A.insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
		]]>
		</if>
		<choose>
		<when test="orderWord != null and orderWord != '' and orderValue != null and orderValue != ''">
		ORDER BY A.${orderWord} ${orderValue}
		</when>
		<otherwise>
		ORDER BY A.insert_date DESC, A.upload_data_id DESC
		</otherwise>
		</choose>
		OFFSET #{offset} LIMIT #{limit}
	</select>
	
	<!-- 업로딩 정보 -->
	<select id="getUploadData" parameterType="uploadData" resultType="uploadData">
		/* getUploadData */
		SELECT A.*, B.data_group_name
		FROM upload_data A, data_group B
		WHERE A.data_group_id = B.data_group_id
			<if test="userId != null and userId != ''">
			AND user_id = #{userId}
			</if>
			AND upload_data_id = #{uploadDataId}
	</select>
	
	<!-- 업로딩 파일 총 건수 -->
	<select id="getUploadDataFileTotalCount" parameterType="uploadDataFile" resultType="long">
		/* getUploadDataFileTotalCount */
		SELECT COUNT(upload_data_file_id) 
		FROM upload_data_file 
		<if test="userId != null and userId != ''">
		WHERE user_id =#{userId} 
		</if>
	</select>

	<!-- 업로딩 파일 총 용량 -->
	<select id="getUploadDataFileTotalSize" parameterType="uploadDataFile" resultType="long">
		/* getUploadDataFileTotalSize */
		SELECT SUM(TO_NUMBER(file_size, '99999999999999999999')) 
		FROM upload_data_file 
		<if test="userId != null and userId != ''">
		WHERE user_id =#{userId} 
		</if> 
	</select>
	
	<!-- 업로딩한 파일 목록 -->
	<select id="getListUploadDataFile" parameterType="uploadData" resultType="uploadDataFile">
		/* getListUploadDataFile */
		SELECT A.data_name, A.location, A.altitude, B.*
		FROM upload_data A, upload_data_file B, 
		WHERE A.upload_data_id = B.upload_data_id
		<if test="userId != null and userId != ''">
			AND B.user_id =#{userId} 
		</if> 
			AND A.upload_data_id = #{uploadDataId}
		<if test="converter_target != null">
			AND B.converter_target = #{converterTarget}
		</if>	
		<choose>
		<when test="orderWord != null and orderWord != '' and orderValue != null and orderValue != ''">
		ORDER BY B.${orderWord} ${orderValue}
		</when>
		<otherwise>
		ORDER BY B.depth, A.insert_date
		</otherwise>
		</choose>
	</select>

	<!-- 사용자 3차원 파일 정보 업로딩 -->
	<insert id="insertUploadData" parameterType="uploadData" >
		/* insertUploadData */
		<selectKey keyProperty="uploadDataId" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('upload_data_seq')
  		</selectKey>
		INSERT INTO upload_data(
			upload_data_id, data_group_id, sharing, data_type, data_name, user_id, location,
			altitude, file_count, description
		) VALUES (
			#{uploadDataId}, #{dataGroupId}, #{sharing}, #{dataType}, #{dataName}, #{userId}, ST_GeographyFromText(#{location}),
			#{altitude}, #{fileCount}, #{description}
		)
	</insert>
	
	<!-- 사용자 3차원 파일 업로딩 -->
	<insert id="insertUploadDataFile" parameterType="uploadDataFile" >
		/* insertUploadDataFile */
		<selectKey keyProperty="uploadDataFileId" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('upload_data_file_seq')
  		</selectKey>
		INSERT INTO upload_data_file(
			upload_data_file_id, upload_data_id, converter_target, user_id, file_type,
			file_name, file_real_name, file_path, file_sub_path, file_size, file_ext, depth, error_message
		) VALUES (
			#{uploadDataFileId}, #{uploadDataId}, #{converterTarget}, #{userId}, #{fileType},
			#{fileName}, #{fileRealName}, #{filePath}, #{fileSubPath}, #{fileSize}, #{fileExt}, #{depth}, #{errorMessage}
		)
	</insert>
	
	<!-- 업로딩 데이터 정보 삭제 -->
	<delete id="deleteUploadData" parameterType="uploadData">
		/* deleteUploadData */
		DELETE FROM upload_data 
		WHERE upload_data_id = #{uploadDataId}
		<if test="userId != null and userId != ''">
			AND user_id =#{userId} 
		</if> 
	</delete>
	
	<!-- 업로딩 데이터 파일 삭제 -->
	<delete id="deleteUploadDataFile" parameterType="uploadData">
		/* deleteUploadDataFile */
		DELETE FROM upload_data_file 
		WHERE upload_data_id = #{uploadDataId}
		<if test="userId != null and userId != ''">
			AND user_id =#{userId} 
		</if> 
	</delete>
	
</mapper>